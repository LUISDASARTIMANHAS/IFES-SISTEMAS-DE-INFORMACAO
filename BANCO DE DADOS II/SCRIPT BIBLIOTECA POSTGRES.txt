----------------------------------------------------------------------------
-- BIBLIOTECA --------------------------------------------------------------
---------------------------- 02-09-2025 ------------------------------------
----------------------------------------------------------------------------


CREATE TABLE GENERO (
    ID_GENERO CHAR(3) NOT NULL PRIMARY KEY,
    DESCRICAO_GENERO VARCHAR(35) NOT NULL
);

INSERT INTO GENERO 
VALUES ('LIT', 'LITERATURA'), ('DID','DIDATICO'),
       ('AAJ', 'AUTO AJUDA'), ('REL','RELIGIOSO'),
       ('CIE', 'CIENTIFICO'), ('DIV','DIVULGACAO CIENTIFICA'),
       ('QUA', 'QUADRINHOS'), ('FOT','FOTOGRAFIA');
       
CREATE TABLE OBRA (
    NR_OBRA SERIAL NOT NULL PRIMARY KEY,
    TITULO VARCHAR(45) NOT NULL,
    ID_GENERO CHAR(3) NOT NULL,
    
    FOREIGN KEY(ID_GENERO) REFERENCES GENERO (ID_GENERO)
    ON DELETE RESTRICT
);       

INSERT INTO OBRA (TITULO, ID_GENERO) VALUES
('POEMA DE MIO CID','LIT'), ('OS TRÊS MOSQUETEIROS','LIT'),
('O CONDE DE MONTECRISTO','LIT'), ('HELENA','LIT'),
('INTELIGENCIA ARTIFICIAL','CIE'), ('O PENSAMENTO POSITIVO DO FOD@-SE','AAJ'),
('COMO FAZER AMIGOS E INFLUENCIAR PESSOAS','AAJ'),('TEORIA DO CAOS','CIE'),
('ASTERIX E A FOICE DE OURO','QUA');

CREATE TABLE AUTOR (
    ID_AUTOR CHAR(5) NOT NULL PRIMARY KEY,
    NOME_AUTOR VARCHAR (35) NOT NULL
);

INSERT INTO AUTOR VALUES
('DESCO','***** DESCONHECIDO *****'), ('ADUMA','ALEXANDRE DUMAS'),
('MASSI','MACHADO DE ASSIS'),('RUSSE','STUART RUSSEL'),
('NORVI','PETER NORVIG'), ('JMORP','JOSEPH MORPHY'),
('JGLEI','JAMES GLEICK'), ('GOSCI','RENE GOSCINY'),
('UDERZ','ALBERT UDERZO');


CREATE TABLE AUTORIA (
    NR_OBRA INTEGER NOT NULL,
    ID_AUTOR CHAR(5) NOT NULL,
    
    PRIMARY KEY (NR_OBRA, ID_AUTOR),
    
    FOREIGN KEY (NR_OBRA) REFERENCES OBRA (NR_OBRA)
    ON DELETE RESTRICT,
    
    FOREIGN KEY (ID_AUTOR) REFERENCES AUTOR (ID_AUTOR)
    ON DELETE RESTRICT
);

INSERT INTO AUTORIA VALUES (1,'DESCO'),(2,'ADUMA'),(3,'ADUMA'),
(4,'MASSI'),(5,'RUSSE'),(5,'NORVI'), (6,'JMORP'), (7,'JMORP'),
(8,'JGLEI'),(9,'GOSCI'),(9,'UDERZ');


CREATE TABLE EDITORA (
    ID_EDITORA CHAR(3) NOT NULL PRIMARY KEY,
    NOME_EDITORA VARCHAR(40) NOT NULL
);

INSERT INTO EDITORA VALUES ('EBA','EBAL - EDITORA BRASIL AMERICA'),
('RGE','RIO GRAFICA EDITORA'),('BLO','BLOCH EDITORES'),
('ROC','ROCCO EDITORA'),('SEX','SEXTANTE');


CREATE TABLE LIVRO (
    NR_LIVRO SERIAL NOT NULL PRIMARY KEY,
    DT_AQUISICAO DATE NOT NULL,
    ID_EDITORA CHAR(3) NOT NULL,
    
    FOREIGN KEY (ID_EDITORA) REFERENCES EDITORA (ID_EDITORA)
    ON DELETE RESTRICT
);

INSERT INTO LIVRO (DT_AQUISICAO, ID_EDITORA) VALUES
('2025-01-02','EBA'), ('2025-02-21','EBA'),('2025-01-30','BLO'),
('2025-02-14','BLO'), ('2025-03-25','RGE'),('2025-08-29','RGE'),
('2026-04-03','BLO'), ('2026-09-22','ROC'), ('2026-09-23','ROC'),
('2026-09-28', 'ROC'), ('2026-10-03','ROC'),('2026-11-02','SEX');


CREATE TABLE COMPOSICAO (
    NR_OBRA INTEGER NOT NULL,
    NR_LIVRO INTEGER NOT NULL,
    
    PRIMARY KEY(NR_OBRA, NR_LIVRO),
    
    FOREIGN KEY (NR_OBRA) REFERENCES OBRA (NR_OBRA)
    ON DELETE RESTRICT,
    
    FOREIGN KEY (NR_LIVRO) REFERENCES LIVRO (NR_LIVRO)
    ON DELETE RESTRICT
);


INSERT INTO COMPOSICAO VALUES (1,1), (1,2), (2,3), (3,3),(4,4),(5,5),
(5,6), (5,7), (6,8), (7,8), (8,9),(8,10),(8,11), (9,12);

CREATE TABLE USUARIO (
     MATRICULA SERIAL NOT NULL PRIMARY KEY,
     NOME_USUARIO VARCHAR(45) NOT NULL,
     SEXO CHAR(1) NOT NULL,
     DT_NASCIMENTO DATE NOT NULL
);

INSERT INTO USUARIO (NOME_USUARIO, SEXO, DT_NASCIMENTO) VALUES
('ASDRUBAL SOARES RIBEIRO','M','1961-11-09'),
('JAMBIRA TIMBIRAS','F','1999-01-23'),
('CECILIA GARFUNKEL','F','2009-05-10');


CREATE TABLE MOVIMENTACAO (
    NR_LIVRO INTEGER NOT NULL,
    MATRICULA INTEGER NOT NULL,
    DT_EMPRESTIMO DATE NOT NULL,
    DT_PREVISTA_DEVOLUCAO DATE,
    DT_EFETIVA_DEVOLUCAO DATE,
    
    PRIMARY KEY(NR_LIVRO, MATRICULA, DT_EMPRESTIMO),
    
    FOREIGN KEY (NR_LIVRO) REFERENCES LIVRO (NR_LIVRO)
    ON DELETE RESTRICT,
    
    FOREIGN KEY (MATRICULA) REFERENCES USUARIO(MATRICULA)
    ON DELETE RESTRICT
);


------------------------------------------------------------------------------
-- PARTICIONAMENTO DE TABELAS ------------------------------------------------
---------------- USANDO HERANÇA ----------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------

-- CRIANDO UMA PARTIÇÃO DA TABELA MOVIMENTACAO (ATRAVÉS DE HERANÇA)
CREATE TABLE MOVIMENTACAO_2025 (
    CHECK (DT_EMPRESTIMO >= '2025-01-01' AND DT_EMPRESTIMO <= '2025-12-31')
)INHERITS(MOVIMENTACAO);

CREATE TABLE MOVIMENTACAO_2026 (
    CHECK (DT_EMPRESTIMO >= '2026-01-01' AND DT_EMPRESTIMO <= '2026-12-31')
)INHERITS(MOVIMENTACAO);

CREATE TABLE MOVIMENTACAO_2027 (
    CHECK (DT_EMPRESTIMO >= '2027-01-01' AND DT_EMPRESTIMO <= '2027-12-31')
)INHERITS(MOVIMENTACAO);


---------------------------------------------------------------------------------
-- Agora que temos 3 partições criadas para tabela MOVIMENTACAO devemos também --
-- adicionar índices para cada uma das tabelas filhas (MOVIMENTACAO_2025,      --
-- MOVIMENTACAO_2026 e MOVIMENTACAO_2027. Dessa forma agilizaremos as consultas--
-- sobre o conteúdo destas tabelas filhas. Os índices serão criados a partir   --
-- da coluna DT_EMPRESTIMO  -----------------------------------------------------
---------------------------------------------------------------------------------

CREATE INDEX MOVIMENTACAO_2025_IDX ON MOVIMENTACAO_2025 (DT_EMPRESTIMO);
CREATE INDEX MOVIMENTACAO_2026_IDX ON MOVIMENTACAO_2026 (DT_EMPRESTIMO);
CREATE INDEX MOVIMENTACAO_2027_IDX ON MOVIMENTACAO_2027 (DT_EMPRESTIMO);

CREATE INDEX movimentacao_2025_matricula_idx ON movimentacao_2025 (matricula);
CREATE INDEX movimentacao_2026_matricula_idx ON movimentacao_2026 (matricula);
CREATE INDEX movimentacao_2027_matricula_idx ON movimentacao_2027 (matricula);

CREATE INDEX movimentacao_2025_livro_idx ON movimentacao_2025 (nr_livro);
CREATE INDEX movimentacao_2026_livro_idx ON movimentacao_2026 (nr_livro);
CREATE INDEX movimentacao_2027_livro_idx ON movimentacao_2027 (nr_livro);

CREATE INDEX movimentacao_2025_abertos_idx
ON movimentacao_2025 (matricula, nr_livro)
WHERE dt_efetiva_devolucao IS NULL;


INSERT INTO MOVIMENTACAO VALUES (5,2,'2025-09-03','2025-09-10',NULL);


SELECT * FROM MOVIMENTACAO;

SELECT * FROM MOVIMENTACAO_2025;

-- Repare que o registro não existe no particionamento MOVIMENTACAO_2025.


-- Função de roteamento
CREATE OR REPLACE FUNCTION movimentacao_insert_trigger()
RETURNS TRIGGER AS $$
BEGIN
    IF (NEW.dt_emprestimo >= DATE '2025-01-01' AND NEW.dt_emprestimo <= DATE '2025-12-31') THEN
        INSERT INTO movimentacao_2025 VALUES (NEW.*);
        
    ELSIF (NEW.dt_emprestimo >= DATE '2026-01-01' AND NEW.dt_emprestimo <= DATE '2026-12-31') THEN
        INSERT INTO movimentacao_2026 VALUES (NEW.*);
        
    ELSIF (NEW.dt_emprestimo >= DATE '2027-01-01' AND NEW.dt_emprestimo <= DATE '2027-12-31') THEN
        INSERT INTO movimentacao_2027 VALUES (NEW.*);
        
    ELSE
        RAISE EXCEPTION 'Data de empréstimo (%) fora do intervalo das partições!', NEW.dt_emprestimo;
    END IF;

    RETURN NULL; -- impede inserção na tabela mãe
END;
$$ LANGUAGE plpgsql;


CREATE TRIGGER movimentacao_insert_router
BEFORE INSERT ON movimentacao
FOR EACH ROW EXECUTE FUNCTION movimentacao_insert_trigger();

DELETE FROM MOVIMENTACAO WHERE NR_LIVRO = 5 AND MATRICULA = 2 
AND DT_EMPRESTIMO = '2025-09-03';

INSERT INTO MOVIMENTACAO VALUES (5,2,'2025-09-03','2025-09-10',NULL);

SELECT * FROM MOVIMENTACAO;

SELECT * FROM MOVIMENTACAO_2025;

SELECT * FROM MOVIMENTACAO_2026;

DELETE FROM MOVIMENTACAO WHERE NR_LIVRO = 5 AND MATRICULA = 2 
AND DT_EMPRESTIMO = '2025-09-03';

SELECT * FROM MOVIMENTACAO; -- EXCLUSÃO BEM SUCEDIDA EM MOVIMENTACAO

SELECT * FROM MOVIMENTACAO_2025;

SELECT * FROM MOVIMENTACAO_2026;

UPDATE MOVIMENTACAO SET DT_PREVISTA_DEVOLUCAO = '2026-02-01' 
WHERE NR_LIVRO = 4 AND MATRICULA = 1 AND DT_EMPRESTIMO = '2026-01-25';

SELECT * FROM MOVIMENTACAO_2026; -- Alteração com sucesso em MOVIMENTACAO_2026

DROP TABLE MOVIMENTACAO_2025;
DROP TABLE MOVIMENTACAO_2026;
DROP TABLE MOVIMENTACAO_2027;

DROP TABLE MOVIMENTACAO;


CREATE TABLE MOVIMENTACAO (
    NR_LIVRO INTEGER NOT NULL,
    MATRICULA INTEGER NOT NULL,
    DT_EMPRESTIMO DATE NOT NULL CHECK (DT_EMPRESTIMO > '1996-03-25') DEFAULT CURRENT_DATE,
    DT_PREVISTA_DEVOLUCAO DATE CHECK (DT_PREVISTA_DEVOLUCAO > DT_EMPRESTIMO),
    DT_EFETIVA_DEVOLUCAO DATE CHECK (DT_EFETIVA_DEVOLUCAO IS NULL OR DT_EFETIVA_DEVOLUCAO >= DT_EMPRESTIMO)
    
    -- RETIRE POIS NÃO FUNCIONA NA MANEIRA COMO FAREMOS A PARTIÇÃO
    --PRIMARY KEY(NR_LIVRO, MATRICULA, DT_EMPRESTIMO),
    
    --FOREIGN KEY (NR_LIVRO) REFERENCES LIVRO (NR_LIVRO)
    --ON DELETE RESTRICT,
    
    --FOREIGN KEY (MATRICULA) REFERENCES USUARIO(MATRICULA)
    --ON DELETE RESTRICT    
) PARTITION BY RANGE (DT_EMPRESTIMO);

CREATE TABLE MOVIMENTACAO_2025 PARTITION OF MOVIMENTACAO
FOR VALUES FROM ('2025-01-01') TO ('2026-01-01');

-- A primeira data ('2025-01-01') é INCLUSIVE mas a
-- segunda data do intervalo ('2026-01-01') é EXCLUSIVE.
-- PERÍODO ABRANGIDO: de 01-01-2025 até 31-12-2025.

CREATE TABLE MOVIMENTACAO_2026 PARTITION OF MOVIMENTACAO
FOR VALUES FROM ('2026-01-01') TO ('2027-01-01');

CREATE TABLE MOVIMENTACAO_2027 PARTITION OF MOVIMENTACAO
FOR VALUES FROM ('2027-01-01') TO ('2028-01-01');

CREATE TABLE MOVIMENTACAO_2028 PARTITION OF MOVIMENTACAO
FOR VALUES FROM ('2028-01-01') TO ('2029-01-01');


INSERT INTO MOVIMENTACAO VALUES (6,3,NOW()::DATE,(NOW() + INTERVAL '7 DAYS'), NULL);

SELECT * FROM MOVIMENTACAO;











